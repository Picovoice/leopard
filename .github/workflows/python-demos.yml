name: Python Demos

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/python-demos.yml'
      - 'demo/python/**'
      - '!demo/python/README.md'
  pull_request:
    branches: [ master, 'v[0-9]+.[0-9]+' ]
    paths:
      - '.github/workflows/python-demos.yml'
      - 'demo/python/**'
      - '!demo/python/README.md'

defaults:
  run:
    working-directory: demo/python

jobs:
  build-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Pre-build dependencies
      run: python -m pip install --upgrade pip

      # TODO: remove after release
    - name: Build dependencies
      run: |
        python -m pip install -U pip setuptools
        pip install wheel && cd ../../binding/python && python3 setup.py sdist bdist_wheel && pip install dist/pvleopard-2.0.3-py3-none-any.whl

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Test
      run: python leopard_demo_file.py --access_key ${{secrets.PV_VALID_ACCESS_KEY}} --wav_paths ../../resources/audio_samples/test.wav

  build-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [rpi3-32, rpi3-64, rpi4-32, rpi4-64, rpi5-64]

    steps:
    - uses: actions/checkout@v3

      # TODO: remove after release
    - name: Build dependencies
      run: pip install wheel && cd ../../binding/python && python3 setup.py sdist bdist_wheel && pip install dist/pvleopard-2.0.3-py3-none-any.whl

    - name: Install dependencies
      run: pip3 install -r requirements.txt

    - name: Test
      run: python3 leopard_demo_file.py --access_key ${{secrets.PV_VALID_ACCESS_KEY}} --wav_paths ../../resources/audio_samples/test.wav

  build-subtitle-demo:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: demo/python-subtitle

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

      # TODO: remove after release
    - name: Build dependencies
      run: pip install wheel && cd ../../binding/python && python3 setup.py sdist bdist_wheel && pip install dist/pvleopard-2.0.3-py3-none-any.whl

    - name: Pre-build dependencies
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Test
      run: python main.py
        --access_key ${{secrets.PV_VALID_ACCESS_KEY}}
        --youtube_url https://www.youtube.com/watch?v=b7wzFEDU0U8
        --subtitle_path test.txt

  build-youtube-demo:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: demo/python-youtube

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

      # TODO: remove after release
    - name: Build dependencies
      run: pip install wheel && cd ../../binding/python && python3 setup.py sdist bdist_wheel && pip install dist/pvleopard-2.0.3-py3-none-any.whl

    - name: Pre-build dependencies
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Test
      run: python main.py
        --access_key ${{secrets.PV_VALID_ACCESS_KEY}}
        --url https://www.youtube.com/watch?v=b7wzFEDU0U8
        --transcript_path test.txt
